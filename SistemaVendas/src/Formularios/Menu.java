/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import static Classes.ValidaNome.ValidarNome;
import static Classes.ValidaNumero.ValidarNumero;
import static Classes.ValidarCPF.ValidarCPF;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JadsonRaphael
 */
public class Menu extends javax.swing.JFrame {
    Login login = new Login();
    
    int maxProds = 80;
    int contaProds = 0;
    String nomeProduto[] = new String[maxProds];
    String pontosProduto[] = new String[maxProds];
    int quantidadeProduto[] = new int[maxProds];
    Double[] precoProduto = new Double[maxProds];
    
    DefaultTableModel tabela;
    
    ArrayList<String> produtoCarrinho = new ArrayList();
    ArrayList<String> quantidadeCarrinho = new ArrayList();
    int contadorItens = 0;
    boolean produtoAdicionado = false;
    
    ArrayList<String> nomeCliente = new ArrayList();
    ArrayList<String> cpfCliente = new ArrayList();
    ArrayList<Integer> pontosCliente = new ArrayList();
    
    int valorInicial = 4000;
    int capital = valorInicial;
    
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        tabela = (DefaultTableModel) tabelaProdutos.getModel();
        
        PainelGerenciamento.setVisible(true);
        PainelVenda.setVisible(false);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        PainelCadastro = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        botaoCadastrar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        descricaoCadastro = new javax.swing.JTextField();
        precoCadastro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        caixaPontos = new javax.swing.JComboBox();
        PainelTrocaPontos = new javax.swing.JPanel();
        PainelTrocaPontos1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        pontosCampoNome = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        pontosCampoCpf = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        campoPontosCliente = new javax.swing.JTextField();
        botaoAlterarPontos = new javax.swing.JToggleButton();
        botaoSalvarPontos = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        caixaDefinirPontos = new javax.swing.JComboBox();
        botaoUsarPontos = new javax.swing.JToggleButton();
        jLabel20 = new javax.swing.JLabel();
        caixaItemPontos = new javax.swing.JComboBox();
        JScrollPane = new javax.swing.JScrollPane();
        listaPontos = new javax.swing.JList();
        PainelEstoque = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        PainelCarrinho = new javax.swing.JPanel();
        campoItemCarrinho = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        campoQuantidadeCarrinho = new javax.swing.JTextField();
        botaoExcluirCarrinho = new javax.swing.JToggleButton();
        botaoEditarCarrinho = new javax.swing.JToggleButton();
        botaoLojaCarrinho = new javax.swing.JButton();
        botaoSalvarCarrinho = new javax.swing.JButton();
        botaoAvancarCarrinho = new javax.swing.JButton();
        botaoVoltarCarrinho = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        PainelGerenciamento = new javax.swing.JPanel();
        produtoGerenciamento = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        quantidadeGerenciamento = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        valorGerenciamento = new javax.swing.JTextField();
        botaoAdicionarEstoque = new javax.swing.JToggleButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        PainelVenda = new javax.swing.JPanel();
        adicionarCesta = new javax.swing.JButton();
        checarCesta = new javax.swing.JButton();
        caixaVender = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        quantidadeVendas = new javax.swing.JTextField();
        botaoClienteNaoCadastrado = new javax.swing.JRadioButton();
        botaoClienteCadastrado = new javax.swing.JRadioButton();
        telaVendas = new javax.swing.JPanel();
        telaClienteCadastrado = new javax.swing.JPanel();
        txtQuantidadeItens2 = new javax.swing.JLabel();
        caixaQuantidadeItensCadastrado = new javax.swing.JComboBox();
        botaoFinalizarCompraCadastrado = new javax.swing.JToggleButton();
        txtCpfCadastrado = new javax.swing.JLabel();
        campoCpfCadastrado = new javax.swing.JFormattedTextField();
        telaClienteNaoCadastrado = new javax.swing.JPanel();
        txtNomeClienteVendas = new javax.swing.JLabel();
        campoNomeCadastro = new javax.swing.JTextField();
        txtQuantidadeItens1 = new javax.swing.JLabel();
        caixaQuantidadeItensCadastro = new javax.swing.JComboBox();
        txtCpfCadastro = new javax.swing.JLabel();
        campoCpfCadastro = new javax.swing.JFormattedTextField();
        botaoFinalizarCompraCadastro = new javax.swing.JButton();
        PainelFundos = new javax.swing.JPanel();
        txtFundoPossui = new javax.swing.JLabel();
        txtDinheiroAtual = new javax.swing.JLabel();
        txtDinheiroInicial = new javax.swing.JLabel();
        PainelSenha = new javax.swing.JPanel();
        campoSenhaConfirmacao = new javax.swing.JPasswordField();
        txtSenha3 = new javax.swing.JLabel();
        campoSenhaNova = new javax.swing.JPasswordField();
        campoSenhaNovaConfirmacao = new javax.swing.JPasswordField();
        txtSenha2 = new javax.swing.JLabel();
        botaoAlterarSenha = new javax.swing.JButton();
        txtSenha = new javax.swing.JLabel();
        PainelLogin = new javax.swing.JPanel();
        campoLoginConfirmacao = new javax.swing.JTextField();
        txtLogin1 = new javax.swing.JLabel();
        txtLogin2 = new javax.swing.JLabel();
        campoLoginNovo = new javax.swing.JTextField();
        botaoAlterarLogin = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Produtos = new javax.swing.JMenu();
        mnuCadastro = new javax.swing.JMenuItem();
        mnuEstoqueProdutos = new javax.swing.JMenuItem();
        mnuGerenciamento = new javax.swing.JMenuItem();
        mnuVender = new javax.swing.JMenuItem();
        Clientes = new javax.swing.JMenu();
        mnuTrocaPontos = new javax.swing.JMenuItem();
        Empresa = new javax.swing.JMenu();
        mnuLogin = new javax.swing.JMenuItem();
        mnuSenha = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuFundos = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(new java.awt.CardLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText("Cadastro");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setText("de Produtos");

        botaoCadastrar.setText("Cadastrar");
        botaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Produto.:");

        jLabel3.setText("Preço.:");

        jLabel6.setText("Pontos Necessários.:");

        caixaPontos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "200", "400", "600", "800", "1000" }));
        caixaPontos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaPontosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descricaoCadastro)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(precoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(caixaPontos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 78, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descricaoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(caixaPontos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PainelCadastroLayout = new javax.swing.GroupLayout(PainelCadastro);
        PainelCadastro.setLayout(PainelCadastroLayout);
        PainelCadastroLayout.setHorizontalGroup(
            PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelCadastroLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PainelCadastroLayout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addGroup(PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PainelCadastroLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(botaoCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        PainelCadastroLayout.setVerticalGroup(
            PainelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelCadastroLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(43, 43, 43)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoCadastrar)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jPanel3.add(PainelCadastro, "card4");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setText("Nome:");

        pontosCampoNome.setEditable(false);
        pontosCampoNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pontosCampoNomeActionPerformed(evt);
            }
        });

        jLabel17.setText("CPF:");

        pontosCampoCpf.setEditable(false);
        try {
            pontosCampoCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        pontosCampoCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pontosCampoCpfActionPerformed(evt);
            }
        });

        jLabel18.setText("Seus Pontos:");

        campoPontosCliente.setEditable(false);

        botaoAlterarPontos.setText("Alterar");
        botaoAlterarPontos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarPontosActionPerformed(evt);
            }
        });

        botaoSalvarPontos.setText("Salvar");
        botaoSalvarPontos.setEnabled(false);
        botaoSalvarPontos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarPontosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(pontosCampoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(campoPontosCliente)))
                    .addComponent(pontosCampoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botaoAlterarPontos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoSalvarPontos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(botaoAlterarPontos)
                        .addGap(31, 31, 31)
                        .addComponent(botaoSalvarPontos)
                        .addGap(2, 2, 2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pontosCampoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pontosCampoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoPontosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel19.setText("Defina um preço:");

        caixaDefinirPontos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "200", "400", "600", "800", "1000" }));
        caixaDefinirPontos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaDefinirPontosActionPerformed(evt);
            }
        });

        botaoUsarPontos.setText("Usar Pontos");
        botaoUsarPontos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoUsarPontosActionPerformed(evt);
            }
        });

        jLabel20.setText("Escolha um item:");

        caixaItemPontos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaItemPontosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19)
                    .addComponent(caixaDefinirPontos, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoUsarPontos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(caixaItemPontos, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(caixaDefinirPontos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(caixaItemPontos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoUsarPontos)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        JScrollPane.setToolTipText("");

        JScrollPane.setViewportView(listaPontos);

        javax.swing.GroupLayout PainelTrocaPontos1Layout = new javax.swing.GroupLayout(PainelTrocaPontos1);
        PainelTrocaPontos1.setLayout(PainelTrocaPontos1Layout);
        PainelTrocaPontos1Layout.setHorizontalGroup(
            PainelTrocaPontos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTrocaPontos1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(PainelTrocaPontos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PainelTrocaPontos1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        PainelTrocaPontos1Layout.setVerticalGroup(
            PainelTrocaPontos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTrocaPontos1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PainelTrocaPontos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JScrollPane))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PainelTrocaPontosLayout = new javax.swing.GroupLayout(PainelTrocaPontos);
        PainelTrocaPontos.setLayout(PainelTrocaPontosLayout);
        PainelTrocaPontosLayout.setHorizontalGroup(
            PainelTrocaPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 529, Short.MAX_VALUE)
            .addGroup(PainelTrocaPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PainelTrocaPontosLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(PainelTrocaPontos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        PainelTrocaPontosLayout.setVerticalGroup(
            PainelTrocaPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
            .addGroup(PainelTrocaPontosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PainelTrocaPontosLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(PainelTrocaPontos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel3.add(PainelTrocaPontos, "card9");

        tabelaProdutos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Preço", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaProdutos);

        javax.swing.GroupLayout PainelEstoqueLayout = new javax.swing.GroupLayout(PainelEstoque);
        PainelEstoque.setLayout(PainelEstoqueLayout);
        PainelEstoqueLayout.setHorizontalGroup(
            PainelEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEstoqueLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        PainelEstoqueLayout.setVerticalGroup(
            PainelEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEstoqueLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel3.add(PainelEstoque, "card10");

        campoItemCarrinho.setEditable(false);
        campoItemCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoItemCarrinhoActionPerformed(evt);
            }
        });

        jLabel14.setText("QUANTIDADE:");

        campoQuantidadeCarrinho.setEditable(false);
        campoQuantidadeCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoQuantidadeCarrinhoActionPerformed(evt);
            }
        });

        botaoExcluirCarrinho.setText("Excluir");
        botaoExcluirCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirCarrinhoActionPerformed(evt);
            }
        });

        botaoEditarCarrinho.setText("Editar");
        botaoEditarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarCarrinhoActionPerformed(evt);
            }
        });

        botaoLojaCarrinho.setText("Loja");
        botaoLojaCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLojaCarrinhoActionPerformed(evt);
            }
        });

        botaoSalvarCarrinho.setText("Salvar");
        botaoSalvarCarrinho.setEnabled(false);
        botaoSalvarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarCarrinhoActionPerformed(evt);
            }
        });

        botaoAvancarCarrinho.setText("Avançar");
        botaoAvancarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAvancarCarrinhoActionPerformed(evt);
            }
        });

        botaoVoltarCarrinho.setText("Voltar");
        botaoVoltarCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarCarrinhoActionPerformed(evt);
            }
        });

        jLabel2.setText("ITEM:");

        javax.swing.GroupLayout PainelCarrinhoLayout = new javax.swing.GroupLayout(PainelCarrinho);
        PainelCarrinho.setLayout(PainelCarrinhoLayout);
        PainelCarrinhoLayout.setHorizontalGroup(
            PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelCarrinhoLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(botaoVoltarCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelCarrinhoLayout.createSequentialGroup()
                        .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(campoItemCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelCarrinhoLayout.createSequentialGroup()
                                .addComponent(campoQuantidadeCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botaoAvancarCarrinho))
                            .addComponent(jLabel14)))
                    .addGroup(PainelCarrinhoLayout.createSequentialGroup()
                        .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botaoSalvarCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PainelCarrinhoLayout.createSequentialGroup()
                                .addComponent(botaoExcluirCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoEditarCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoLojaCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46))
        );
        PainelCarrinhoLayout.setVerticalGroup(
            PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelCarrinhoLayout.createSequentialGroup()
                .addContainerGap(142, Short.MAX_VALUE)
                .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAvancarCarrinho)
                    .addComponent(botaoVoltarCarrinho)
                    .addComponent(campoItemCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoQuantidadeCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoExcluirCarrinho)
                    .addComponent(botaoEditarCarrinho)
                    .addComponent(botaoLojaCarrinho))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoSalvarCarrinho)
                .addGap(142, 142, 142))
        );

        jPanel3.add(PainelCarrinho, "card8");

        produtoGerenciamento.setToolTipText("");

        jLabel13.setText("Quantidade.:");

        quantidadeGerenciamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeGerenciamentoActionPerformed(evt);
            }
        });

        jLabel15.setText("Valor de cada unidade.:");

        valorGerenciamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorGerenciamentoActionPerformed(evt);
            }
        });

        botaoAdicionarEstoque.setText("Adicionar ao Estoque");
        botaoAdicionarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarEstoqueActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel10.setText("de Estoque");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel11.setText("Gerenciamento");

        jLabel12.setText("Produto.:");

        javax.swing.GroupLayout PainelGerenciamentoLayout = new javax.swing.GroupLayout(PainelGerenciamento);
        PainelGerenciamento.setLayout(PainelGerenciamentoLayout);
        PainelGerenciamentoLayout.setHorizontalGroup(
            PainelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelGerenciamentoLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(PainelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PainelGerenciamentoLayout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13)
                            .addGap(69, 69, 69))
                        .addComponent(produtoGerenciamento, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelGerenciamentoLayout.createSequentialGroup()
                            .addGroup(PainelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(valorGerenciamento, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PainelGerenciamentoLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addGap(18, 18, 18)
                            .addComponent(quantidadeGerenciamento, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PainelGerenciamentoLayout.createSequentialGroup()
                            .addGroup(PainelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel10))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PainelGerenciamentoLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(botaoAdicionarEstoque)
                        .addGap(72, 72, 72)))
                .addGap(98, 98, 98))
        );
        PainelGerenciamentoLayout.setVerticalGroup(
            PainelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelGerenciamentoLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(40, 40, 40)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(produtoGerenciamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorGerenciamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantidadeGerenciamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(botaoAdicionarEstoque)
                .addGap(42, 42, 42))
        );

        jPanel3.add(PainelGerenciamento, "card5");

        PainelVenda.setPreferredSize(new java.awt.Dimension(590, 369));

        adicionarCesta.setText("Adicionar Cesta");
        adicionarCesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarCestaActionPerformed(evt);
            }
        });

        checarCesta.setText("Checar Cesta");
        checarCesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checarCestaActionPerformed(evt);
            }
        });

        caixaVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaVenderActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setText("Vendas");

        jLabel8.setText("Produto");

        jLabel9.setText("Quantidade");

        quantidadeVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeVendasActionPerformed(evt);
            }
        });

        botaoClienteNaoCadastrado.setText("Cliente não cadastrado");
        botaoClienteNaoCadastrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoClienteNaoCadastradoActionPerformed(evt);
            }
        });

        botaoClienteCadastrado.setText("Cliente Cadastrado");
        botaoClienteCadastrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoClienteCadastradoActionPerformed(evt);
            }
        });

        telaVendas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        telaVendas.setLayout(new java.awt.CardLayout());

        txtQuantidadeItens2.setText("Quantidade de Itens:");

        caixaQuantidadeItensCadastrado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "15+" }));
        caixaQuantidadeItensCadastrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaQuantidadeItensCadastradoActionPerformed(evt);
            }
        });

        botaoFinalizarCompraCadastrado.setText("Finalizar Compra");
        botaoFinalizarCompraCadastrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFinalizarCompraCadastradoActionPerformed(evt);
            }
        });

        txtCpfCadastrado.setText("CPF:");

        try {
            campoCpfCadastrado.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoCpfCadastrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCpfCadastradoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout telaClienteCadastradoLayout = new javax.swing.GroupLayout(telaClienteCadastrado);
        telaClienteCadastrado.setLayout(telaClienteCadastradoLayout);
        telaClienteCadastradoLayout.setHorizontalGroup(
            telaClienteCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaClienteCadastradoLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(telaClienteCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(telaClienteCadastradoLayout.createSequentialGroup()
                        .addGroup(telaClienteCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoCpfCadastrado, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCpfCadastrado))
                        .addGap(18, 18, 18)
                        .addGroup(telaClienteCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQuantidadeItens2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(telaClienteCadastradoLayout.createSequentialGroup()
                                .addComponent(caixaQuantidadeItensCadastrado, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))))
                    .addGroup(telaClienteCadastradoLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(botaoFinalizarCompraCadastrado)
                        .addGap(60, 60, 60)))
                .addGap(28, 28, 28))
        );
        telaClienteCadastradoLayout.setVerticalGroup(
            telaClienteCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, telaClienteCadastradoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(telaClienteCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantidadeItens2)
                    .addComponent(txtCpfCadastrado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(telaClienteCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCpfCadastrado, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(caixaQuantidadeItensCadastrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoFinalizarCompraCadastrado)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        telaVendas.add(telaClienteCadastrado, "card2");

        txtNomeClienteVendas.setText("Nome Completo:");

        txtQuantidadeItens1.setText("Quantidade de Itens");

        caixaQuantidadeItensCadastro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "15+" }));
        caixaQuantidadeItensCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caixaQuantidadeItensCadastroActionPerformed(evt);
            }
        });

        txtCpfCadastro.setText("CPF:");

        try {
            campoCpfCadastro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        botaoFinalizarCompraCadastro.setText("Finalizar Compra");
        botaoFinalizarCompraCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFinalizarCompraCadastroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout telaClienteNaoCadastradoLayout = new javax.swing.GroupLayout(telaClienteNaoCadastrado);
        telaClienteNaoCadastrado.setLayout(telaClienteNaoCadastradoLayout);
        telaClienteNaoCadastradoLayout.setHorizontalGroup(
            telaClienteNaoCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaClienteNaoCadastradoLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(telaClienteNaoCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, telaClienteNaoCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNomeClienteVendas)
                        .addGroup(telaClienteNaoCadastradoLayout.createSequentialGroup()
                            .addGroup(telaClienteNaoCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(caixaQuantidadeItensCadastro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtQuantidadeItens1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGap(18, 18, 18)
                            .addGroup(telaClienteNaoCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCpfCadastro)
                                .addComponent(campoCpfCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(campoNomeCadastro))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, telaClienteNaoCadastradoLayout.createSequentialGroup()
                        .addComponent(botaoFinalizarCompraCadastro)
                        .addGap(55, 55, 55)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        telaClienteNaoCadastradoLayout.setVerticalGroup(
            telaClienteNaoCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(telaClienteNaoCadastradoLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(txtNomeClienteVendas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoNomeCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(telaClienteNaoCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantidadeItens1)
                    .addComponent(txtCpfCadastro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(telaClienteNaoCadastradoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaQuantidadeItensCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoCpfCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoFinalizarCompraCadastro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        telaVendas.add(telaClienteNaoCadastrado, "card3");

        javax.swing.GroupLayout PainelVendaLayout = new javax.swing.GroupLayout(PainelVenda);
        PainelVenda.setLayout(PainelVendaLayout);
        PainelVendaLayout.setHorizontalGroup(
            PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelVendaLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PainelVendaLayout.createSequentialGroup()
                            .addComponent(adicionarCesta, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(checarCesta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(PainelVendaLayout.createSequentialGroup()
                            .addGroup(PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(caixaVender, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(quantidadeVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(telaVendas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PainelVendaLayout.createSequentialGroup()
                            .addComponent(botaoClienteCadastrado)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botaoClienteNaoCadastrado))))
                .addContainerGap(192, Short.MAX_VALUE))
        );
        PainelVendaLayout.setVerticalGroup(
            PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelVendaLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caixaVender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantidadeVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adicionarCesta)
                    .addComponent(checarCesta))
                .addGap(19, 19, 19)
                .addGroup(PainelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoClienteCadastrado)
                    .addComponent(botaoClienteNaoCadastrado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(telaVendas, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        jPanel3.add(PainelVenda, "card4");

        PainelFundos.setPreferredSize(new java.awt.Dimension(590, 369));

        txtFundoPossui.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtFundoPossui.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtFundoPossui.setText("O fundo da empresa possui:");

        txtDinheiroAtual.setFont(new java.awt.Font("Tahoma", 0, 47)); // NOI18N
        txtDinheiroAtual.setText("4000R$");

        txtDinheiroInicial.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtDinheiroInicial.setText("Valor inicial: 4000");

        javax.swing.GroupLayout PainelFundosLayout = new javax.swing.GroupLayout(PainelFundos);
        PainelFundos.setLayout(PainelFundosLayout);
        PainelFundosLayout.setHorizontalGroup(
            PainelFundosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelFundosLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addGroup(PainelFundosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtDinheiroInicial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDinheiroAtual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFundoPossui, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        PainelFundosLayout.setVerticalGroup(
            PainelFundosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelFundosLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(txtFundoPossui)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDinheiroAtual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDinheiroInicial)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jPanel3.add(PainelFundos, "card5");

        txtSenha3.setText(" Confirme a Senha:");

        txtSenha2.setText(" Senha nova:");

        botaoAlterarSenha.setText("Alterar");
        botaoAlterarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarSenhaActionPerformed(evt);
            }
        });

        txtSenha.setText("Senha antiga:");

        javax.swing.GroupLayout PainelSenhaLayout = new javax.swing.GroupLayout(PainelSenha);
        PainelSenha.setLayout(PainelSenhaLayout);
        PainelSenhaLayout.setHorizontalGroup(
            PainelSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelSenhaLayout.createSequentialGroup()
                .addGroup(PainelSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelSenhaLayout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addGroup(PainelSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSenha)
                            .addComponent(txtSenha3)
                            .addComponent(txtSenha2)
                            .addComponent(campoSenhaConfirmacao)
                            .addComponent(campoSenhaNova)
                            .addComponent(campoSenhaNovaConfirmacao, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PainelSenhaLayout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(botaoAlterarSenha)))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        PainelSenhaLayout.setVerticalGroup(
            PainelSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelSenhaLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(txtSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoSenhaConfirmacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSenha2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoSenhaNova, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSenha3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoSenhaNovaConfirmacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoAlterarSenha)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        jPanel3.add(PainelSenha, "card7");

        campoLoginConfirmacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoLoginConfirmacaoActionPerformed(evt);
            }
        });

        txtLogin1.setText("Antigo Login:");

        txtLogin2.setText("Novo Login:");

        campoLoginNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoLoginNovoActionPerformed(evt);
            }
        });

        botaoAlterarLogin.setText("Alterar");
        botaoAlterarLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelLoginLayout = new javax.swing.GroupLayout(PainelLogin);
        PainelLogin.setLayout(PainelLoginLayout);
        PainelLoginLayout.setHorizontalGroup(
            PainelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLoginLayout.createSequentialGroup()
                .addGroup(PainelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelLoginLayout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addGroup(PainelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoLoginConfirmacao, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoLoginNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLogin1)
                            .addComponent(txtLogin2)))
                    .addGroup(PainelLoginLayout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(botaoAlterarLogin)))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        PainelLoginLayout.setVerticalGroup(
            PainelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLoginLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(txtLogin1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoLoginConfirmacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(txtLogin2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoLoginNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoAlterarLogin)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jPanel3.add(PainelLogin, "card6");

        Produtos.setText("Produtos");
        Produtos.setActionCommand("");

        mnuCadastro.setText("Cadastro de Produtos");
        mnuCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCadastroActionPerformed(evt);
            }
        });
        Produtos.add(mnuCadastro);

        mnuEstoqueProdutos.setText("Estoque de Produtos");
        mnuEstoqueProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEstoqueProdutosActionPerformed(evt);
            }
        });
        Produtos.add(mnuEstoqueProdutos);

        mnuGerenciamento.setText("Gerenciamento");
        mnuGerenciamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGerenciamentoActionPerformed(evt);
            }
        });
        Produtos.add(mnuGerenciamento);

        mnuVender.setText("Vender Produto");
        mnuVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuVenderActionPerformed(evt);
            }
        });
        Produtos.add(mnuVender);

        jMenuBar1.add(Produtos);

        Clientes.setText("Clientes");

        mnuTrocaPontos.setText("Trocar Pontos");
        mnuTrocaPontos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTrocaPontosActionPerformed(evt);
            }
        });
        Clientes.add(mnuTrocaPontos);

        jMenuBar1.add(Clientes);

        Empresa.setText("Empresa");

        mnuLogin.setText("Alterar Login");
        mnuLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuLoginActionPerformed(evt);
            }
        });
        Empresa.add(mnuLogin);

        mnuSenha.setText("Alterar Senha");
        mnuSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSenhaActionPerformed(evt);
            }
        });
        Empresa.add(mnuSenha);
        Empresa.add(jSeparator1);

        mnuFundos.setText("Fundo da Empresa");
        mnuFundos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFundosActionPerformed(evt);
            }
        });
        Empresa.add(mnuFundos);
        Empresa.add(jSeparator2);

        mnuSair.setText("Sair");
        mnuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSairActionPerformed(evt);
            }
        });
        Empresa.add(mnuSair);

        jMenuBar1.add(Empresa);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCadastroActionPerformed
        PainelGerenciamento.setVisible(false);
        PainelVenda.setVisible(false);
        PainelCadastro.setVisible(true);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(false);
        PainelEstoque.setVisible(false);
    }//GEN-LAST:event_mnuCadastroActionPerformed

    private void mnuEstoqueProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEstoqueProdutosActionPerformed
        PainelGerenciamento.setVisible(false);
        PainelVenda.setVisible(false);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(false);
        PainelEstoque.setVisible(true);
    }//GEN-LAST:event_mnuEstoqueProdutosActionPerformed

    private void mnuGerenciamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGerenciamentoActionPerformed
        PainelGerenciamento.setVisible(true);
        PainelVenda.setVisible(false);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(false);
        PainelEstoque.setVisible(false);
    }//GEN-LAST:event_mnuGerenciamentoActionPerformed

    private void mnuVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuVenderActionPerformed
        PainelGerenciamento.setVisible(false);
        PainelVenda.setVisible(true);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(false);
        PainelEstoque.setVisible(false);
    }//GEN-LAST:event_mnuVenderActionPerformed

    private void mnuTrocaPontosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTrocaPontosActionPerformed
        PainelGerenciamento.setVisible(false);
        PainelVenda.setVisible(false);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(true);
        PainelEstoque.setVisible(false);
    }//GEN-LAST:event_mnuTrocaPontosActionPerformed

    private void mnuLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuLoginActionPerformed
        PainelGerenciamento.setVisible(false);
        PainelVenda.setVisible(false);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(true);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(false);
        PainelEstoque.setVisible(false);
    }//GEN-LAST:event_mnuLoginActionPerformed

    private void mnuSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSenhaActionPerformed
        PainelGerenciamento.setVisible(false);
        PainelVenda.setVisible(false);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(true);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(false);
        PainelEstoque.setVisible(false);
    }//GEN-LAST:event_mnuSenhaActionPerformed

    private void mnuFundosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFundosActionPerformed
        PainelGerenciamento.setVisible(false);
        PainelVenda.setVisible(false);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(true);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(false);
        PainelEstoque.setVisible(false);
    }//GEN-LAST:event_mnuFundosActionPerformed

    private void mnuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSairActionPerformed
        this.setVisible(false);
        login.setLocationRelativeTo(null);
        login.setVisible(true);
    }//GEN-LAST:event_mnuSairActionPerformed

    private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarActionPerformed
        if (descricaoCadastro.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "COLOQUE O NOME DO PRODUTO");
            return;
        }
        if (precoCadastro.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "DEFINA O PREÇO DO PRODUTO");
            return;
        }
        if (caixaPontos.getSelectedItem() == "") {
            JOptionPane.showMessageDialog(rootPane, "ESCOLHA OS PONTOS NECESSARIOS");
            return;
        }
       if (ValidarNumero(precoCadastro.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "PREÇO INVALIDO");
            return;
        }
        if (ValidarNome(descricaoCadastro.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "NOME INVALIDO");
            return;
        }
        
        for (int i = 0; i < contaProds; i++) {
            if (descricaoCadastro.getText().equals(nomeProduto[i])) {
                JOptionPane.showMessageDialog(rootPane, "PRODUTO JÁ CADASTRADO");
                return;
            }
        }
        
        nomeProduto[contaProds] = descricaoCadastro.getText();
        caixaVender.addItem(nomeProduto[contaProds]);
        produtoGerenciamento.addItem(nomeProduto[contaProds]);
        precoProduto[contaProds] = Double.parseDouble(precoCadastro.getText());
        pontosProduto[contaProds] = (String) caixaPontos.getSelectedItem();

        Object[] dados = {nomeProduto[contaProds], precoProduto[contaProds], quantidadeProduto[contaProds]};
        tabela.addRow(dados);

        contaProds++;
        JOptionPane.showMessageDialog(rootPane, "PRODUTO CADASTRADO COM SUCESSO");
    }//GEN-LAST:event_botaoCadastrarActionPerformed

    private void caixaPontosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaPontosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caixaPontosActionPerformed

    private void adicionarCestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarCestaActionPerformed
        String s = (String) caixaVender.getSelectedItem();
        if (produtoAdicionado == true) {
            for (int j = 0; j < quantidadeCarrinho.size(); j++) {
                if (produtoCarrinho.get(j).equals(s)) {
                    JOptionPane.showMessageDialog(rootPane, "PRODUTO JÁ ADICIONADO AO CARRINHO");
                    return;
                }
            }
        }

        if (ValidarNumero(quantidadeVendas.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "QUANTIDADE INVALIDA");
            return;
        }
        if (quantidadeVendas.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "INDIQUE A QUANTIDADE");
            return;
        }
        for (int i = 0; i < maxProds; i++) {
            if (nomeProduto[i] == s) {
                int a = Integer.parseInt(quantidadeVendas.getText());
                if (quantidadeProduto[i] < a) {
                    JOptionPane.showMessageDialog(rootPane, "NÃO HÁ ESSA QUANTIDADE NO ESTOQUE");
                } else {
                    produtoCarrinho.add(nomeProduto[i]);
                    quantidadeCarrinho.add(quantidadeVendas.getText());
                    produtoAdicionado = true;

                }
            }
        }
    }//GEN-LAST:event_adicionarCestaActionPerformed

    private void checarCestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checarCestaActionPerformed
        if (produtoAdicionado) {
            campoItemCarrinho.setText(produtoCarrinho.get(0));
            campoQuantidadeCarrinho.setText(quantidadeCarrinho.get(0));
            contadorItens = 0;
        }
        if (contadorItens == 0) {
            botaoVoltarCarrinho.setEnabled(false);
        }
        if (contadorItens + 1 < produtoCarrinho.size()) {
            botaoAvancarCarrinho.setEnabled(true);
        }
        if (contadorItens + 1 == produtoCarrinho.size()) {
            botaoAvancarCarrinho.setEnabled(false);
        }
        if (contadorItens == produtoCarrinho.size()) {
            botaoAvancarCarrinho.setEnabled(false);
        }

        PainelGerenciamento.setVisible(false);
        PainelVenda.setVisible(false);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(true);
        PainelTrocaPontos.setVisible(false);
        PainelEstoque.setVisible(false);
    }//GEN-LAST:event_checarCestaActionPerformed

    private void caixaVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaVenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caixaVenderActionPerformed

    private void quantidadeVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantidadeVendasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantidadeVendasActionPerformed

    private void quantidadeGerenciamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantidadeGerenciamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantidadeGerenciamentoActionPerformed

    private void valorGerenciamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorGerenciamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorGerenciamentoActionPerformed

    private void botaoAdicionarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarEstoqueActionPerformed
        if (produtoGerenciamento.getSelectedItem() == "") {
            JOptionPane.showMessageDialog(rootPane, "NÃO A ITENS PARA ADICIONAR AO ESTOQUE");
            return;
        }
        if (valorGerenciamento.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "INSIRA O VALOR DOS ITENS COMPRADOS");
            return;
        }
        if (quantidadeGerenciamento.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "INSIRA A QUANTIDADE DE ITENS");
            return;
        }
        if (ValidarNumero(quantidadeGerenciamento.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "QUANTIDADE INVALIDA");
            return;
        }
        if (ValidarNumero(valorGerenciamento.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "VALOR INVALIDO");
            return;
        }

        String nome = (String) produtoGerenciamento.getSelectedItem();
        for (int i = 0; i < maxProds; i++) {
            if (nomeProduto[i] == nome) {
                quantidadeProduto[i] += Integer.parseInt(quantidadeGerenciamento.getText());
                
                capital -= (Integer.parseInt(valorGerenciamento.getText()) * Integer.parseInt(quantidadeGerenciamento.getText()));
                txtDinheiroAtual.setText(capital + "R$");
                if (capital < valorInicial) {
                    txtDinheiroAtual.setForeground(Color.red);
                } else if (capital > valorInicial) {
                    txtDinheiroAtual.setForeground(Color.green);
                } else {
                    txtDinheiroAtual.setForeground(Color.black);
                }
            }
        }

        for (int i = 0; i < contaProds; i++) {
            if (nome.equals(tabela.getValueAt(i, 0))) {
                tabela.setValueAt(quantidadeProduto[i], i, 2);
            }
        }

        JOptionPane.showMessageDialog(rootPane, "PRODUTO ADICIONADO AO ESTOQUE");
    }//GEN-LAST:event_botaoAdicionarEstoqueActionPerformed

    private void campoItemCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoItemCarrinhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoItemCarrinhoActionPerformed

    private void campoQuantidadeCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoQuantidadeCarrinhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoQuantidadeCarrinhoActionPerformed

    private void botaoExcluirCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirCarrinhoActionPerformed
        if (campoItemCarrinho.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "NÃO HÁ NENHUM ITEM NO CARRINHO");
            return;
        }
        String s = campoItemCarrinho.getText();
        for (int j = 0; j <= quantidadeCarrinho.size(); j++) {
            if (produtoCarrinho.get(j).equals(s)) {
                quantidadeCarrinho.remove(j);
                produtoCarrinho.remove(j);
                if (quantidadeCarrinho.size() != 0) {
                    campoItemCarrinho.setText(produtoCarrinho.get(0));
                    campoQuantidadeCarrinho.setText(quantidadeCarrinho.get(0));
                } else {
                    campoItemCarrinho.setText("");
                    campoQuantidadeCarrinho.setText("");
                    produtoAdicionado = false;
                }
                j = quantidadeCarrinho.size();
            }
        }
        if (contadorItens > 0) {
            if (contadorItens + 1 == quantidadeCarrinho.size()) {
                botaoAvancarCarrinho.setEnabled(false);
            }
            if (contadorItens == quantidadeCarrinho.size()) {
                botaoAvancarCarrinho.setEnabled(false);
            }
        }
        if (contadorItens + 1 == quantidadeCarrinho.size()) {
            botaoAvancarCarrinho.setEnabled(false);
        }
        if (contadorItens == quantidadeCarrinho.size()) {
            botaoAvancarCarrinho.setEnabled(false);
        }
        if (quantidadeCarrinho.size() == 0 || quantidadeCarrinho.size() == 1) {
            botaoVoltarCarrinho.setEnabled(false);
        }
        System.out.println(contadorItens);
        System.out.println(quantidadeCarrinho.size());
    }//GEN-LAST:event_botaoExcluirCarrinhoActionPerformed

    private void botaoEditarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarCarrinhoActionPerformed
        if (campoItemCarrinho.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "NÃO HÁ NENHUM ITEM NO CARRINHO");
            return;
        }
        botaoLojaCarrinho.setEnabled(false);
        botaoExcluirCarrinho.setEnabled(false);
        botaoSalvarCarrinho.setEnabled(true);
        campoQuantidadeCarrinho.setEditable(true);
    }//GEN-LAST:event_botaoEditarCarrinhoActionPerformed

    private void botaoLojaCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLojaCarrinhoActionPerformed
        PainelGerenciamento.setVisible(false);
        PainelVenda.setVisible(true);
        PainelCadastro.setVisible(false);
        PainelFundos.setVisible(false);
        PainelLogin.setVisible(false);
        PainelSenha.setVisible(false);
        PainelCarrinho.setVisible(false);
        PainelTrocaPontos.setVisible(false);
        PainelEstoque.setVisible(false);
    }//GEN-LAST:event_botaoLojaCarrinhoActionPerformed

    private void botaoSalvarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarCarrinhoActionPerformed
        String s = campoItemCarrinho.getText();
        if (ValidarNumero(campoQuantidadeCarrinho.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "QUANTIDADE INVALIDO");
            return;
        }
        if (campoQuantidadeCarrinho.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "INDIQUE A QUANTIDADE");
            return;
        }
        for (int i = 0; i < maxProds; i++) {
            if (nomeProduto[i].equals(s)) {
                int a = Integer.parseInt(campoQuantidadeCarrinho.getText());
                if (quantidadeProduto[i] < a) {
                    JOptionPane.showMessageDialog(rootPane, "NÃO HÁ ESSA QUANTIDADE NO ESTOQUE");
                    return;
                } else {
                    for (int j = 0; j <= quantidadeCarrinho.size(); j++) {
                        if (produtoCarrinho.get(j).equals(s)) {
                            quantidadeCarrinho.set(j, campoQuantidadeCarrinho.getText());
                            j = quantidadeCarrinho.size();
                            i = maxProds;
                        }
                    }
                }
            }
        }

        botaoLojaCarrinho.setEnabled(true);
        botaoExcluirCarrinho.setEnabled(true);
        botaoSalvarCarrinho.setEnabled(false);
        campoQuantidadeCarrinho.setEditable(false);
    }//GEN-LAST:event_botaoSalvarCarrinhoActionPerformed

    private void botaoAvancarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAvancarCarrinhoActionPerformed
        contadorItens++;
        campoItemCarrinho.setText(produtoCarrinho.get(contadorItens));
        campoQuantidadeCarrinho.setText(quantidadeCarrinho.get(contadorItens));
        if (contadorItens < produtoCarrinho.size()) {
            botaoAvancarCarrinho.setEnabled(true);
        }
        if (contadorItens + 1 == produtoCarrinho.size()) {
            botaoAvancarCarrinho.setEnabled(false);
        }
        botaoVoltarCarrinho.setEnabled(true);
    }//GEN-LAST:event_botaoAvancarCarrinhoActionPerformed

    private void botaoVoltarCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarCarrinhoActionPerformed
        contadorItens--;
        campoItemCarrinho.setText(produtoCarrinho.get(contadorItens));
        campoQuantidadeCarrinho.setText(quantidadeCarrinho.get(contadorItens));
        if (contadorItens == 0) {
            botaoVoltarCarrinho.setEnabled(false);
        }
        if (contadorItens < produtoCarrinho.size()) {
            botaoAvancarCarrinho.setEnabled(true);
        }
        if (contadorItens + 1 == produtoCarrinho.size()) {
            botaoAvancarCarrinho.setEnabled(false);
        }
    }//GEN-LAST:event_botaoVoltarCarrinhoActionPerformed

    private void botaoClienteNaoCadastradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoClienteNaoCadastradoActionPerformed
        telaVendas.setVisible(true);
        telaClienteNaoCadastrado.setVisible(true);
        telaClienteCadastrado.setVisible(false);
    }//GEN-LAST:event_botaoClienteNaoCadastradoActionPerformed

    private void botaoClienteCadastradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoClienteCadastradoActionPerformed
        telaVendas.setVisible(true);
        telaClienteCadastrado.setVisible(true);
        telaClienteNaoCadastrado.setVisible(false);
    }//GEN-LAST:event_botaoClienteCadastradoActionPerformed

    private void caixaQuantidadeItensCadastradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaQuantidadeItensCadastradoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caixaQuantidadeItensCadastradoActionPerformed

    private void botaoFinalizarCompraCadastradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFinalizarCompraCadastradoActionPerformed
        boolean cpfCadastrado = false;
        if (produtoAdicionado == false) {
            JOptionPane.showMessageDialog(rootPane, "NÃO HÁ PRODUTOS PARA A COMPRA");
            return;
        }
        for (int i = 0; i < cpfCliente.size(); i++) {
            if (cpfCliente.get(i).equals(campoCpfCadastrado.getText())) {
                cpfCadastrado = true;
                int p = pontosCliente.get(i);
                if (caixaQuantidadeItensCadastrado.getSelectedItem() == "5") {
                    p += 50;
                    pontosCliente.set(i, p);
                } else if (caixaQuantidadeItensCadastrado.getSelectedItem() == "10") {
                    p += 200;
                    pontosCliente.set(i, p);
                } else if (caixaQuantidadeItensCadastrado.getSelectedItem() == "15") {
                    p += 300;
                    pontosCliente.set(i, p);
                } else if (caixaQuantidadeItensCadastrado.getSelectedItem() == "15+") {
                    p += 400;
                    pontosCliente.set(i, p);
                }
            }
        }

        if (cpfCadastrado == false) {
            JOptionPane.showMessageDialog(rootPane, "CPF NÃO CADASTRADO");
            return;
        }

        for (int i = 0; i < produtoCarrinho.size(); i++) {
            for (int j = 0; j < maxProds; j++) {
                if (produtoCarrinho.get(i).equals(nomeProduto[j])) {
                    quantidadeProduto[j] -= Integer.parseInt(quantidadeCarrinho.get(i));

                    capital += (precoProduto[j] * Integer.parseInt(quantidadeCarrinho.get(i)));
                    txtDinheiroAtual.setText(capital + "R$");
                    if (capital < valorInicial) {
                        txtDinheiroAtual.setForeground(Color.red);
                    } else if (capital > valorInicial) {
                        txtDinheiroAtual.setForeground(Color.green);
                    } else {
                        txtDinheiroAtual.setForeground(Color.black);
                    }
                    
                    for (int k = 0; k < contaProds; k++) {
                        if (nomeProduto[j].equals(tabela.getValueAt(k, 0))) {
                            tabela.setValueAt(quantidadeProduto[k], k, 2);
                        }
                    }

                    produtoCarrinho.remove(i);
                    quantidadeCarrinho.remove(i);
                    campoItemCarrinho.setText("");
                    campoQuantidadeCarrinho.setText("");
                    produtoAdicionado = false;
                    j = maxProds;
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "COMPRA REALIZADA COM SUCESSO");
    }//GEN-LAST:event_botaoFinalizarCompraCadastradoActionPerformed

    private void campoCpfCadastradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCpfCadastradoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCpfCadastradoActionPerformed

    private void caixaQuantidadeItensCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaQuantidadeItensCadastroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caixaQuantidadeItensCadastroActionPerformed

    private void botaoFinalizarCompraCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFinalizarCompraCadastroActionPerformed
        if (produtoAdicionado == false) {
            JOptionPane.showMessageDialog(rootPane, "NÃO HÁ PRODUTOS PARA A COMPRA");
            return;
        }
        if (campoNomeCadastro.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "INSIRA O NOME DO CLIENTE");
            return;
        }
        for (int i = 0; i < cpfCliente.size(); i++) {
            if (cpfCliente.get(i).equals(campoCpfCadastro.getText())) {
                JOptionPane.showMessageDialog(rootPane, "CPF JÁ CADASTRADO");
                return;
            }
        }
        if (ValidarNome(campoNomeCadastro.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "NOME POSSUÍ CREDENCIAIS NÃO PERMITIDAS");
            return;
        }
        String cpfTeste = campoCpfCadastro.getText().replaceAll("[.-]", "");
        if (ValidarCPF(cpfTeste) == false) {
            JOptionPane.showMessageDialog(rootPane, "CPF NÃO É VALIDO");
            return;
        }

        System.out.println(cpfTeste);
        nomeCliente.add(campoNomeCadastro.getText());
        cpfCliente.add(campoCpfCadastro.getText());
        if (caixaQuantidadeItensCadastro.getSelectedItem() == "5") {
            pontosCliente.add(50);
        } else if (caixaQuantidadeItensCadastro.getSelectedItem() == "10") {
            pontosCliente.add(200);
        } else if (caixaQuantidadeItensCadastro.getSelectedItem() == "15") {
            pontosCliente.add(300);
        } else if (caixaQuantidadeItensCadastro.getSelectedItem() == "15+") {
            pontosCliente.add(400);
        }
        for (int i = 0; i < produtoCarrinho.size(); i++) {
            for (int j = 0; j < maxProds; j++) {
                if (produtoCarrinho.get(i).equals(nomeProduto[j])) {
                    quantidadeProduto[j] -= Integer.parseInt(quantidadeCarrinho.get(i));

                    capital += (precoProduto[j] * Integer.parseInt(quantidadeCarrinho.get(i)));
                    txtDinheiroAtual.setText(capital + "R$");
                    if (capital < valorInicial) {
                        txtDinheiroAtual.setForeground(Color.red);
                    } else if (capital > valorInicial) {
                        txtDinheiroAtual.setForeground(Color.green);
                    } else {
                        txtDinheiroAtual.setForeground(Color.black);
                    }

                    for (int k = 0; k < contaProds; k++) {
                        if (nomeProduto[j].equals(tabela.getValueAt(k, 0))) {
                            tabela.setValueAt(quantidadeProduto[k], k, 2);
                        }
                    }

                    produtoCarrinho.remove(i);
                    quantidadeCarrinho.remove(i);
                    campoItemCarrinho.setText("");
                    campoQuantidadeCarrinho.setText("");
                    produtoAdicionado = false;
                    j = maxProds;
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "COMPRA REALIZADA COM SUCESSO");
    }//GEN-LAST:event_botaoFinalizarCompraCadastroActionPerformed

    private void pontosCampoNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pontosCampoNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pontosCampoNomeActionPerformed

    private void pontosCampoCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pontosCampoCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pontosCampoCpfActionPerformed

    private void botaoAlterarPontosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarPontosActionPerformed
        pontosCampoCpf.setEditable(true);
        botaoSalvarPontos.setEnabled(true);
        botaoAlterarPontos.setEnabled(false);
    }//GEN-LAST:event_botaoAlterarPontosActionPerformed

    private void botaoSalvarPontosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarPontosActionPerformed
        boolean cpfCadastrado = false;
        for (int i = 0; i < cpfCliente.size(); i++) {
            if (pontosCampoCpf.getText().equals(cpfCliente.get(i))) {
                cpfCadastrado = true;
                pontosCampoNome.setText(nomeCliente.get(i));
                campoPontosCliente.setText(Integer.toString(pontosCliente.get(i)));
            }
        }
        if (cpfCadastrado == false) {
            JOptionPane.showMessageDialog(rootPane, "ESTE CPF NÃO ESTÁ CADASTRADO");
            return;
        }

        pontosCampoCpf.setEditable(false);
        botaoSalvarPontos.setEnabled(false);
        botaoAlterarPontos.setEnabled(true);
    }//GEN-LAST:event_botaoSalvarPontosActionPerformed

    private void caixaDefinirPontosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaDefinirPontosActionPerformed
        DefaultListModel modeloLista = new DefaultListModel();
        listaPontos.setModel(modeloLista);
        String s = (String) caixaDefinirPontos.getSelectedItem();
        if (s.equals("200")) {
            modeloLista.removeAllElements();
            caixaItemPontos.removeAllItems();
            for (int i = 0; i < contaProds; i++) {
                if (pontosProduto[i].equals("200")) {
                    modeloLista.addElement(nomeProduto[i]);
                    caixaItemPontos.addItem(nomeProduto[i]);
                }
            }
        } else if (s.equals("400")) {
            modeloLista.removeAllElements();
            caixaItemPontos.removeAllItems();
            for (int i = 0; i < contaProds; i++) {
                if (pontosProduto[i].equals("400")) {
                    modeloLista.addElement(nomeProduto[i]);
                    caixaItemPontos.addItem(nomeProduto[i]);
                }
            }
        } else if (s.equals("600")) {
            modeloLista.removeAllElements();
            caixaItemPontos.removeAllItems();
            for (int i = 0; i < contaProds; i++) {
                if (pontosProduto[i].equals("600")) {
                    modeloLista.addElement(nomeProduto[i]);
                    caixaItemPontos.addItem(nomeProduto[i]);
                }
            }
        } else if (s.equals("800")) {
            modeloLista.removeAllElements();
            caixaItemPontos.removeAllItems();
            for (int i = 0; i < contaProds; i++) {
                if (pontosProduto[i].equals("800")) {
                    modeloLista.addElement(nomeProduto[i]);
                    caixaItemPontos.addItem(nomeProduto[i]);
                }
            }
        } else if (s.equals("1000")) {
            modeloLista.removeAllElements();
            caixaItemPontos.removeAllItems();
            for (int i = 0; i < contaProds; i++) {
                if (pontosProduto[i].equals("1000")) {
                    modeloLista.addElement(nomeProduto[i]);
                    caixaItemPontos.addItem(nomeProduto[i]);
                }
            }
        } else {

            modeloLista.removeAllElements();
        }
    }//GEN-LAST:event_caixaDefinirPontosActionPerformed

    private void botaoUsarPontosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoUsarPontosActionPerformed
        if (pontosCampoNome.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "INSIRA SEUS DADOS");
            return;
        }
        for (int i = 0; i < contaProds; i++) {
            if (caixaItemPontos.getSelectedItem().equals(nomeProduto[i])) {
                if (0 == quantidadeProduto[i]) {
                    JOptionPane.showMessageDialog(rootPane, "NÃO HÁ ESTE PRODUTO EM ESTOQUE");
                    return;
                }
            }
        }
        int o = Integer.parseInt((String) caixaDefinirPontos.getSelectedItem());
        System.out.println(o);

        for (int j = 0; j < cpfCliente.size(); j++) {
            if (pontosCampoCpf.getText().equals(cpfCliente.get(j))) {
                if (pontosCliente.get(j) < o) {
                    JOptionPane.showMessageDialog(rootPane, "VOCÊ NÃO POSSUI PONTOS SUFICIENTES PARA PEGAR ESTE ITEM");
                    return;
                }
                int n = (pontosCliente.get(j) - o);
                pontosCliente.set(j, n);
                campoPontosCliente.setText(Integer.toString(pontosCliente.get(j)));
                JOptionPane.showMessageDialog(rootPane, "TROCA REALIZADA");
            }
        }

        for (int i = 0; i < contaProds; i++) {
            if (caixaItemPontos.getSelectedItem().equals(nomeProduto[i])) {
                for (int j = 0; j < contaProds; j++) {
                    if (nomeProduto[i].equals(tabela.getValueAt(j, 0))) {
                        quantidadeProduto[i]--;
                        tabela.setValueAt(quantidadeProduto[i], j, 2);
                    }
                }
            }
        }
    }//GEN-LAST:event_botaoUsarPontosActionPerformed

    private void caixaItemPontosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaItemPontosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caixaItemPontosActionPerformed

    private void botaoAlterarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarSenhaActionPerformed
        if (!campoSenhaConfirmacao.getText().equals(login.pegarSenha())) {
            JOptionPane.showMessageDialog(rootPane, "SENHA ANTIGA INCORRETO");
            return;
        }
        if (campoSenhaNova.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "DIGITE UMA SENHA");
            return;
        }
        if (campoSenhaNovaConfirmacao.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "CONFIRME SUA SENHA NOVA");
            return;
        }
        if (!campoSenhaNova.getText().equals(campoSenhaNovaConfirmacao.getText())) {
            JOptionPane.showMessageDialog(rootPane, "OS CAMPOS DE SENHA NOVA NÃO COINCIDEM");
            return;
        }
        login.alterarSenha(campoSenhaNova.getText());
        JOptionPane.showMessageDialog(rootPane, "SENHA ALTERADO COM SUCESSO");
    }//GEN-LAST:event_botaoAlterarSenhaActionPerformed

    private void campoLoginConfirmacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoLoginConfirmacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoLoginConfirmacaoActionPerformed

    private void campoLoginNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoLoginNovoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoLoginNovoActionPerformed

    private void botaoAlterarLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarLoginActionPerformed
        if (!campoLoginConfirmacao.getText().equals(login.pegarLogin())) {
            JOptionPane.showMessageDialog(rootPane, "LOGIN ANTIGO INCORRETO");
            return;
        }
        if (campoLoginNovo.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "DIGITE UM LOGIN");
            return;
        }
        login.alterarLogin(campoLoginNovo.getText());
        JOptionPane.showMessageDialog(rootPane, "LOGIN ALTERADO COM SUCESSO");
    }//GEN-LAST:event_botaoAlterarLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Clientes;
    private javax.swing.JMenu Empresa;
    private javax.swing.JScrollPane JScrollPane;
    private javax.swing.JPanel PainelCadastro;
    private javax.swing.JPanel PainelCarrinho;
    private javax.swing.JPanel PainelEstoque;
    private javax.swing.JPanel PainelFundos;
    private javax.swing.JPanel PainelGerenciamento;
    private javax.swing.JPanel PainelLogin;
    private javax.swing.JPanel PainelSenha;
    private javax.swing.JPanel PainelTrocaPontos;
    private javax.swing.JPanel PainelTrocaPontos1;
    private javax.swing.JPanel PainelVenda;
    private javax.swing.JMenu Produtos;
    private javax.swing.JButton adicionarCesta;
    private javax.swing.JToggleButton botaoAdicionarEstoque;
    private javax.swing.JButton botaoAlterarLogin;
    private javax.swing.JToggleButton botaoAlterarPontos;
    private javax.swing.JButton botaoAlterarSenha;
    private javax.swing.JButton botaoAvancarCarrinho;
    private javax.swing.JButton botaoCadastrar;
    private javax.swing.JRadioButton botaoClienteCadastrado;
    private javax.swing.JRadioButton botaoClienteNaoCadastrado;
    private javax.swing.JToggleButton botaoEditarCarrinho;
    private javax.swing.JToggleButton botaoExcluirCarrinho;
    private javax.swing.JToggleButton botaoFinalizarCompraCadastrado;
    private javax.swing.JButton botaoFinalizarCompraCadastro;
    private javax.swing.JButton botaoLojaCarrinho;
    private javax.swing.JButton botaoSalvarCarrinho;
    private javax.swing.JButton botaoSalvarPontos;
    private javax.swing.JToggleButton botaoUsarPontos;
    private javax.swing.JButton botaoVoltarCarrinho;
    private javax.swing.JComboBox caixaDefinirPontos;
    private javax.swing.JComboBox caixaItemPontos;
    private javax.swing.JComboBox caixaPontos;
    private javax.swing.JComboBox caixaQuantidadeItensCadastrado;
    private javax.swing.JComboBox caixaQuantidadeItensCadastro;
    private javax.swing.JComboBox caixaVender;
    private javax.swing.JFormattedTextField campoCpfCadastrado;
    private javax.swing.JFormattedTextField campoCpfCadastro;
    private javax.swing.JTextField campoItemCarrinho;
    private javax.swing.JTextField campoLoginConfirmacao;
    private javax.swing.JTextField campoLoginNovo;
    private javax.swing.JTextField campoNomeCadastro;
    private javax.swing.JTextField campoPontosCliente;
    private javax.swing.JTextField campoQuantidadeCarrinho;
    private javax.swing.JPasswordField campoSenhaConfirmacao;
    private javax.swing.JPasswordField campoSenhaNova;
    private javax.swing.JPasswordField campoSenhaNovaConfirmacao;
    private javax.swing.JButton checarCesta;
    private javax.swing.JTextField descricaoCadastro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JList listaPontos;
    private javax.swing.JMenuItem mnuCadastro;
    private javax.swing.JMenuItem mnuEstoqueProdutos;
    private javax.swing.JMenuItem mnuFundos;
    private javax.swing.JMenuItem mnuGerenciamento;
    private javax.swing.JMenuItem mnuLogin;
    private javax.swing.JMenuItem mnuSair;
    private javax.swing.JMenuItem mnuSenha;
    private javax.swing.JMenuItem mnuTrocaPontos;
    private javax.swing.JMenuItem mnuVender;
    private javax.swing.JFormattedTextField pontosCampoCpf;
    private javax.swing.JTextField pontosCampoNome;
    private javax.swing.JTextField precoCadastro;
    private javax.swing.JComboBox produtoGerenciamento;
    private javax.swing.JTextField quantidadeGerenciamento;
    private javax.swing.JTextField quantidadeVendas;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JPanel telaClienteCadastrado;
    private javax.swing.JPanel telaClienteNaoCadastrado;
    private javax.swing.JPanel telaVendas;
    private javax.swing.JLabel txtCpfCadastrado;
    private javax.swing.JLabel txtCpfCadastro;
    private javax.swing.JLabel txtDinheiroAtual;
    private javax.swing.JLabel txtDinheiroInicial;
    private javax.swing.JLabel txtFundoPossui;
    private javax.swing.JLabel txtLogin1;
    private javax.swing.JLabel txtLogin2;
    private javax.swing.JLabel txtNomeClienteVendas;
    private javax.swing.JLabel txtQuantidadeItens1;
    private javax.swing.JLabel txtQuantidadeItens2;
    private javax.swing.JLabel txtSenha;
    private javax.swing.JLabel txtSenha2;
    private javax.swing.JLabel txtSenha3;
    private javax.swing.JTextField valorGerenciamento;
    // End of variables declaration//GEN-END:variables
}
